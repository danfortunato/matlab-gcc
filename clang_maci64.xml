<?xml version="1.0" encoding="UTF-8" ?>
<config
    Name="Xcode with Clang"
    ShortName="Clang"
    Manufacturer="Apple"
    Version="$CLANG_VERSION"
    Language="C"
    Priority="B"
    Location="$XCODE_DIR" >
    <Details
        CompilerExecutable="$CC"
        CompilerDefines="$DEFINES"
        CompilerFlags="$CFLAGS"
        OptimizationFlags="$COPTIMFLAGS"
        DebugFlags="$CDEBUGFLAGS"
        IncludeFlags="$INCLUDE"
        LinkerLibraries="$LINKLIBS"
        LinkerOptimizationFlags="$LDOPTIMFLAGS"
        LinkerDebugFlags="$LDDEBUGFLAGS"

        CompilerDefineFormatter="-D%s"
        LinkerLibrarySwitchFormatter="-l%s"
        LinkerPathFormatter="-L%s"
        />
    <vars
        CMDLINE100="$CC -c $DEFINES $INCLUDE $CFLAGS $OPTIM $SRC -o $OBJ"
        CMDLINE200="$LD $LDFLAGS $OBJS $LINKOPTIM $LINKEXPORTVER $CLIBS $LINKLIBS -o $EXE"

        CC="$XCRUN_DIR/xcrun -sdk macosx$SDKVER clang"
        CXX="$XCRUN_DIR/xcrun -sdk macosx$SDKVER clang++"
        DEFINES="$MATLABMEX"
        MATLABMEX="-DMATLAB_MEX_FILE"
        MACOSX_DEPLOYMENT_TARGET="10.14"
        CFLAGS="-fno-common -arch x86_64 -mmacosx-version-min=$MACOSX_DEPLOYMENT_TARGET -fexceptions -isysroot $ISYSROOT"
        INCLUDE="-I&quot;$MATLABROOT/extern/include&quot; -I&quot;$MATLABROOT/simulink/include&quot;"
        COPTIMFLAGS="-O2 -fwrapv -DNDEBUG"
        CDEBUGFLAGS="-g"

        LD="$CC"
        LDXX="$CXX"
        LDFLAGS="-Wl,-twolevel_namespace -undefined error -arch x86_64 -mmacosx-version-min=$MACOSX_DEPLOYMENT_TARGET -Wl,-syslibroot,$ISYSROOT $LDBUNDLE $LINKEXPORT"
        LDBUNDLE="-bundle "
        FUNCTIONMAP="&quot;$MATLABROOT/extern/lib/maci64/mexFunction.map&quot;"
        VERSIONMAP="&quot;$MATLABROOT/extern/lib/maci64/c_exportsmexfileversion.map&quot;"
        LINKEXPORT="-Wl,-exported_symbols_list,$FUNCTIONMAP"
        LINKEXPORTVER="-Wl,-exported_symbols_list,$VERSIONMAP"
        LINKLIBS="-L&quot;$MATLABROOT/bin/maci64&quot; -lmx -lmex -lmat -lc++"
        LDOPTIMFLAGS="-O"
        LDDEBUGFLAGS="-g"

        OBJEXT=".o"
        LDEXT=".mexmaci64"
        SETENV="CC=&quot;$CC&quot;
                CXX=&quot;$CXX&quot;
                CFLAGS=&quot;$CFLAGS $DEFINES&quot;
                CXXFLAGS=&quot;$CFLAGS -fobjc-arc -std=c++11 -stdlib=libc++ $DEFINES&quot;
                COPTIMFLAGS=&quot;$COPTIMFLAGS&quot;
                CXXOPTIMFLAGS=&quot;$COPTIMFLAGS&quot;
                CDEBUGFLAGS=&quot;$CDEBUGFLAGS&quot;
                CXXDEBUGFLAGS=&quot;$CDEBUGFLAGS&quot;
                LD=&quot;$LD&quot;
                LDXX=&quot;$LDXX&quot;
                LDFLAGS=&quot;$LDFLAGS $LINKLIBS $LINKEXPORT&quot;
                LDDEBUGFLAGS=&quot;$LDDEBUGFLAGS&quot;"
    />
    <client>
        <engine
            LINKLIBS="$LINKLIBS -leng"
            LDBUNDLE=""
            LINKEXPORT=""
            LINKEXPORTVER=""
            LDEXT=""
        />
       <mbuild
           CMDLINE150="$MATLABROOT/bin/maci64/macbundle $EXENAME &quot;$EXEDIR&quot;"
           CMDLINE200="$LD $LDFLAGS $OBJS $LINKOPTIM $LINKEXPORT $CLIBS $LINKLIBS -o &quot;$EXEDIR$EXENAME.app/Contents/MacOS/$EXENAME&quot;"
           MACOSX_DEPLOYMENT_TARGET="10.14"
           CFLAGS="-fno-common -arch x86_64 -mmacosx-version-min=$MACOSX_DEPLOYMENT_TARGET -isysroot $ISYSROOT"
           DEFINES="-DUNIX -DX11"
           LDFLAGS="-arch x86_64 -mmacosx-version-min=$MACOSX_DEPLOYMENT_TARGET -Wl,-syslibroot,$ISYSROOT $LDTYPE $LINKEXPORT -framework CoreFoundation -bind_at_load"
           LINKEXPORT=""
           LINKEXPORTVER=""
           LINKLIBS="-L&quot;$MATLABROOT/runtime/maci64&quot; -lmwmclmcrrt"
           MATLABMEX=""
           LDEXT=".app"
           LDTYPE=""
        />
    </client>
    <locationFinder>
        <!--Check for faulty DEVELOPER_DIR environment variable -->
        <DEVELOPER_DIR_CHECK>
            <or>
                <not>
                    <envVarExists name="DEVELOPER_DIR" />
                </not>
                    <dirExists name="$$" diagnostic="The environment variable DEVELOPER_DIR indicates a folder that does not exist. Please correct or delete this variable before using MEX." />
           </or>
    </DEVELOPER_DIR_CHECK>
         <!-- User needs to run "!sudo xcode-select -switch /Applications/Xcode.app/"
         to configure xcrun.  This creates the file /usr/share/xcode-select/xcode_dir_path -->
    <XCODE_DIR>
        <and diagnostic="Xcode appears to be installed, but it has not been configured.  Run &quot; xcode-select -switch /Applications/Xcode.app &quot;.  You must be an administrator of this computer to complete this action." >
            <cmdReturns name="xcode-select -print-path" />
            <dirExists name="$$" />
        </and>
        </XCODE_DIR>
        <XCRUN_DIR>
            <and>
                <cmdReturns name="which xcrun" />
                <dirExists name="$$" />
            </and>
        </XCRUN_DIR>
        <!-- User needs to agree to license of the version (or higher) that we support -->
        <XCODE_AGREED_VERSION>
            <and diagnostic="Xcode is installed, but its license has not been accepted. Run Xcode and accept its license agreement." >
                <or>
                    <cmdReturns name="defaults read com.apple.dt.Xcode IDEXcodeVersionForAgreedToGMLicense"/>
                    <cmdReturns name="defaults read /Library/Preferences/com.apple.dt.Xcode IDEXcodeVersionForAgreedToGMLicense"/>
                </or>
                <cmdReturns name="&#10;agreed=$$ &#10; if echo $agreed | grep -E '[\.\&quot;]' >/dev/null; then &#10; lhs=`expr &quot;$agreed&quot; : '\([0-9]*\)[\.].*'` &#10;  rhs=`expr &quot;$agreed&quot; : '[0-9]*[\.]\(.*\)$'` &#10; if echo $rhs | grep -E '[\.&quot;]' >/dev/null; then &#10; rhs=`expr &quot;$rhs&quot; : '\([0-9]*\)[\.].*'` &#10; fi &#10; if [ $lhs -gt 4 ] || ( [ $lhs -eq 4 ] &amp;&amp; [ $rhs -ge 3 ] ); then &#10; echo $agreed &#10; else &#10; exit 1&#10; fi &#10; fi" />
            </and>
        </XCODE_AGREED_VERSION>
        <ISYSROOT>
            <cmdReturns name="xcrun -sdk macosx --show-sdk-path"/>
        </ISYSROOT>
        <SDKVER>
            <cmdReturns name="xcrun -sdk macosx --show-sdk-version | awk 'BEGIN {FS=&quot;.&quot;} ; {print $1&quot;.&quot;$2}'"/>
        </SDKVER>
        <CLANG_VERSION>
            <cmdReturns name="clang --version | grep -Eo '[0-9]+\.[0-9]+\.[0-9]'|head -1"/>
        </CLANG_VERSION>
    </locationFinder>
</config>
